# .github/workflows/build.yml
name: CMake Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake build-essential

    - name: Configure with CMake
      run: |
        mkdir -p build
        cd build
        cmake ..

    - name: Build with Make
      run: |
        cd build
        make -j$(nproc)
        cd ..
        make
        chmod +x slang
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifact
        path: |
          slang
          build/libslang.a
          build/libslang_modules.a
      
  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build test
        run: | 
          mkdir -p build 
          cd build
          cmake .. -DSLANG_DEBUG=ON
          make
          cd ..
          make
      - name: Run test
        run: |
          ./slang examples/basics.slang
          ./slang examples/functions.slang
          ./slang examples/logic.slang
          ./slang examples/synths.slang

  image:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build Docker image
        run: |
          docker build -t slang:latest .

      - name: Tag image
        run: |
          docker tag slang:latest ${{ secrets.DOCKER_USERNAME }}/slang:latest

      - name: Push image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/slang:latest

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: ./dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ github.run_number }}
          name: Release v${{ github.run_number }}
          draft: false
          prerelease: false
          files: ./dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
